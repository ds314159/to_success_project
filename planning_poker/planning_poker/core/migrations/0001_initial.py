# Generated by Django 4.2.8 on 2023-12-17 13:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Feature",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(default="")),
                ("story_points", models.IntegerField(default=0)),
                ("voted", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Messages",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Participant",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
            ],
        ),
        migrations.CreateModel(
            name="PokerSession",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("players", models.IntegerField(default=1, verbose_name="Participants")),
                (
                    "feature_field_name",
                    models.CharField(default="items", max_length=50, verbose_name="Nom du champ des features"),
                ),
                ("product_backlog", models.TextField()),
                ("product_backlog_file", models.FileField(upload_to="files", verbose_name="Fichier du backlog")),
                (
                    "mode",
                    models.CharField(
                        choices=[("strict", "Strict"), ("medium", "Moyen")], default="strict", max_length=10
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("created", "Créée"), ("started", "Commencée"), ("finished", "Terminée")],
                        default="created",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "result_file",
                    models.FileField(blank=True, null=True, upload_to="files", verbose_name="Fichier du résultat"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tour",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("designation", models.IntegerField(default=1)),
                (
                    "feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="tours", to="core.feature"
                    ),
                ),
                (
                    "poker_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="tours", to="core.pokersession"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("vote", models.IntegerField()),
                ("cafe", models.BooleanField(default=False)),
                ("interro", models.BooleanField(default=False)),
                (
                    "feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="votes", to="core.feature"
                    ),
                ),
                (
                    "poker_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="votes", to="core.pokersession"
                    ),
                ),
                (
                    "tour",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="votes", to="core.tour"
                    ),
                ),
                (
                    "voter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="votes", to="core.participant"
                    ),
                ),
            ],
        ),
    ]
